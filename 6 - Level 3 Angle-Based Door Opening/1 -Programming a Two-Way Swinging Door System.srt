WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:18.600
您好，欢迎回到虚幻引擎 5、蓝图掌握、门系统和互动

00:00:18.600 --> 00:00:19.600
门户。

00:00:19.600 --> 00:00:27.800
之前，我们完成了小部件系统，根据门是否关闭来显示关闭或打开

00:00:27.800 --> 00:00:29.640
需要打开或者关闭。

00:00:29.640 --> 00:00:37.680
因此，我们在 BP 单向门内创建了这个函数 updateWidgetText，它正在调用

00:00:37.680 --> 00:00:42.960
我们在上一课中创建的函数 updateWidgetText 来自游戏模式并填充

00:00:42.960 --> 00:00:47.480
与门状态对应的文本。

00:00:47.480 --> 00:00:56.320
现在，因为我们在小部件上出现了这个讨厌的 E，所以我们最终添加了一些代码

00:00:56.320 --> 00:01:03.880
在门打开或关闭时移除门部件，并在

00:01:03.880 --> 00:01:08.720
当动画在时间线上结束时，门是打开或关闭的。

00:01:08.720 --> 00:01:12.920
现在让我们继续前往下一扇门。

00:01:12.920 --> 00:01:17.840
所以我要让 3 级在这里可见。

00:01:17.840 --> 00:01:23.860
这扇门应该从玩家注视的方向相反的地方打开。

00:01:23.860 --> 00:01:29.480
因此，为了做到这一点，我们要复制当前的门。

00:01:29.480 --> 00:01:30.480
我们也保存一下吧。

00:01:30.480 --> 00:01:33.720
您看到这里有一个小星号，这个白色星号。

00:01:33.720 --> 00:01:34.720
让我做一个改变。

00:01:34.720 --> 00:01:35.720
门在哪儿？

00:01:35.720 --> 00:01:36.720
这里就是门。

00:01:36.720 --> 00:01:40.600
我们要将其移到这里以便出现星号。

00:01:40.600 --> 00:01:44.840
你看这里的星号意味着蓝图发生了一些变化，

00:01:44.840 --> 00:01:48.240
需要保存，但该资产尚未保存。

00:01:48.240 --> 00:01:50.080
这就是这个星号的含义。

00:01:50.080 --> 00:01:56.060
我要再次保存，Ctrl+Shift+S 保存所有内容，然后我要复制这个

00:01:56.060 --> 00:01:57.060
蓝图。

00:01:57.060 --> 00:02:06.680
我将其命名为“BP Opposite From Player Door”。

00:02:06.680 --> 00:02:11.000
拼写可能正确，也可能不正确，我们永远不会知道。

00:02:11.000 --> 00:02:15.060
所以我要打开这个，这是相同的蓝图。

00:02:15.060 --> 00:02:19.000
这是我们拥有的蓝图的复制版本。

00:02:19.000 --> 00:02:26.600
但在我们开始做一些改变之前，这些改变不会很多，让我们先看一下教程

00:02:26.600 --> 00:02:34.640
地图并带来一个新的浮动文本。

00:02:34.640 --> 00:02:42.480
让我们选择点光源。

00:02:42.480 --> 00:02:46.600
我们把它拿到这儿来，这儿来。

00:02:46.600 --> 00:02:51.400
我认为这里很好。

00:02:51.400 --> 00:03:00.440
还有碰撞，盒子碰撞，让我们把它放大一点。

00:03:00.440 --> 00:03:04.580
没关系。

00:03:04.580 --> 00:03:08.600
最后是正文。

00:03:08.600 --> 00:03:12.240
但是让我们先填充文本，让我们选择蓝图。

00:03:12.240 --> 00:03:26.120
让我们转到我的文本值，这扇门在玩家对面打开。

00:03:26.120 --> 00:03:33.640
好的，现在让我们选择文本。

00:03:33.640 --> 00:03:38.880
我看不到文本，因为它是不可见的。

00:03:38.880 --> 00:03:44.280
是的，我们不必每次都这样做，只需修改蓝图上的一件事即可。

00:03:44.280 --> 00:03:46.200
让我们打开蓝图。

00:03:46.200 --> 00:03:55.320
在开始播放时，让我们带上文本并将可见性设置为 false。

00:03:55.320 --> 00:04:04.200
让我们转到文本渲染并使可见性变为真实。

00:04:04.200 --> 00:04:08.960
让我们编译并保存，回到我们的地图。

00:04:08.960 --> 00:04:16.200
现在我们可以看到文本，并且当游戏开始时它就会消失。

00:04:16.200 --> 00:04:20.200
我会把这个带过来。

00:04:20.200 --> 00:04:28.000
我要回到蓝图，我要转到文本，然后格式化它。

00:04:28.000 --> 00:04:31.320
让我们将这里的尺寸稍微增加一点。

00:04:31.320 --> 00:04:44.200
因此，在这里按 Shift 键进入，在这里按 Shift 键进入，然后 ta-da！

00:04:44.200 --> 00:04:51.920
我们再选择一次吧。

00:04:51.920 --> 00:05:00.760
是的，这样很好，也许我会把它弄小一点。

00:05:00.760 --> 00:05:09.760
现在，由于这会缩放为一个段，基本上是一个捕捉点，我可以禁用它

00:05:09.760 --> 00:05:20.600
从这里开始，只需执行此操作并再次启用它即可启用捕捉点。

00:05:20.600 --> 00:05:26.040
所以让我们把我们的新门也带到这里。

00:05:26.040 --> 00:05:32.800
那么对于玩家来说，要把它带到这里，我应该把它转向哪一侧？

00:05:32.800 --> 00:05:37.480
这条路，还是这条路，这条路？

00:05:37.480 --> 00:05:39.680
让我们保持相同的观点。

00:05:39.680 --> 00:05:44.800
是的，看起来还不错。

00:05:44.800 --> 00:05:51.000
是的，没问题。

00:05:51.000 --> 00:05:53.840
那么让我们来讨论一下功能。

00:05:53.840 --> 00:06:00.160
不会有太大的变化，让我们找到门，关闭我们做的其他蓝图

00:06:00.160 --> 00:06:03.160
不再需要了。

00:06:03.160 --> 00:06:07.240
不需要这个。

00:06:07.240 --> 00:06:08.680
保存游戏模式。

00:06:08.680 --> 00:06:13.600
是的，就在对面的门，就是这样。

00:06:13.600 --> 00:06:22.920
现在我们要改变的基本上是时间轴上这个角度为 -90 或 90

00:06:22.920 --> 00:06:26.260
根据玩家所站立的位置。

00:06:26.260 --> 00:06:31.520
我们可以进行多次碰撞，并从每一侧检查玩家是否在这一侧

00:06:31.520 --> 00:06:37.560
或这边，但还有另一种更快捷、更简单的方法可以做到这一点。

00:06:37.560 --> 00:06:50.000
我们将创建一个函数来计算方向，在这个函数中我们将

00:06:50.000 --> 00:06:59.840
获取演员的位置，因此获取演员的位置，并且我们还需要玩家的位置。

00:06:59.840 --> 00:07:11.400
为了让玩家处于这种场景中，我们可以让玩家回家，从这里我们也可以

00:07:11.400 --> 00:07:16.400
- 实际上我们可以复制它并在这里连接。

00:07:16.400 --> 00:07:20.600
所以我们有两个位置，玩家位置和门位置。

00:07:20.600 --> 00:07:28.080
现在门有正面了，因为我们有箭头，如果我们打开播放器，播放器

00:07:28.080 --> 00:07:31.200
也有正面。

00:07:31.200 --> 00:07:36.180
现在我们回到我们的计算方向。

00:07:36.180 --> 00:07:41.600
从这两个位置我们需要找到从门到玩家的方向。

00:07:41.600 --> 00:07:44.280
它在我身后还是在我前面？

00:07:44.280 --> 00:07:54.320
所以我们要得到方向，从两者中得到唯一的方向向量。

00:07:54.320 --> 00:08:02.100
这将产生一个矢量结果，这意味着根据我所站的位置，y 和

00:08:02.100 --> 00:08:07.320
x 和 z 可能是负数，也可能是正数。

00:08:07.320 --> 00:08:08.320
让我们演示一下。

00:08:08.320 --> 00:08:21.680
我要打印字符串，把它连接到这里，然后我们来玩吧，把它放在这里。

00:08:21.680 --> 00:08:29.440
现在让我们穿过这扇门，这扇门打开了。

00:08:29.440 --> 00:08:33.880
我忘了连接这个功能了。

00:08:33.880 --> 00:08:39.560
让我们将其连接起来，或者实际上按 E。

00:08:39.560 --> 00:08:45.680
所以我要在这里计算方向。

00:08:45.680 --> 00:08:52.520
所以当我按下 E 时，你会看到除了 z 之外的所有变量都是负数。

00:08:52.520 --> 00:09:01.400
但如果我过去这里，他们又变成负数了。

00:09:01.400 --> 00:09:05.600
但是现在 x 是正数，因为我在另一边。

00:09:05.600 --> 00:09:14.920
如果我们考虑中心，这里的 x 是正数，而这里是

00:09:14.920 --> 00:09:16.200
减。

00:09:16.200 --> 00:09:19.920
所以我真的不知道应该是哪一个。

00:09:19.920 --> 00:09:24.220
如果我从另一边走，它们也会改变。

00:09:24.220 --> 00:09:31.000
如果我在这边有这扇门，那么他们就会得到减号，在这边他们就会得到加号。

00:09:31.000 --> 00:09:35.680
所以这实际上还没有完成工作。

00:09:35.680 --> 00:09:43.840
我们需要做的是创建一个点积。

00:09:43.840 --> 00:09:46.080
那么点积是什么？

00:09:46.080 --> 00:09:48.340
这实际上并没有解释太多。

00:09:48.340 --> 00:09:52.280
那么点积基本上是什么？

00:09:52.280 --> 00:09:54.600
这是比较两个方向的一种方法。

00:09:54.600 --> 00:10:02.640
这里我们得到了演员的方向，下一个方向是前向向量，

00:10:02.640 --> 00:10:03.640
获取前向向量。

00:10:03.640 --> 00:10:04.640
这里是。

00:10:04.640 --> 00:10:09.080
抱歉，不是这个。

00:10:09.080 --> 00:10:11.520
演员前锋，就在这里。

00:10:11.520 --> 00:10:13.040
获取演员前向向量。

00:10:13.040 --> 00:10:16.520
基本上这就是门的正面。

00:10:16.520 --> 00:10:22.860
所以我们有这个方向，我们有从门到玩家的方向。

00:10:22.860 --> 00:10:26.160
所以我们有这个方向和门的前方。

00:10:26.160 --> 00:10:32.880
现在基于这些方向，点积告诉我们这两个向量，这些

00:10:32.880 --> 00:10:37.180
两个箭头指向同一个方向。

00:10:37.180 --> 00:10:43.560
如果点积是一个较高的正数，则它们指向相似的方向。

00:10:43.560 --> 00:10:48.360
如果是负数，则指向相反的方向。

00:10:48.360 --> 00:10:52.840
如果为零，则它们指向彼此的直角。

00:10:52.840 --> 00:10:58.080
基本上，它的作用是计算它们之间的角度的余弦。

00:10:58.080 --> 00:11:04.720
这就是点积的作用，它给我们一个浮点数作为返回值，无论是负数还是正数。

00:11:04.720 --> 00:11:11.200
我们将使用它来检查它是否大于或等于零。

00:11:11.200 --> 00:11:16.120
如果它大于或等于零，我们将创建一个新变量。

00:11:16.120 --> 00:11:19.600
我们称之为开放角度。

00:11:19.600 --> 00:11:25.040
我们要把它改为浮点数。

00:11:25.040 --> 00:11:30.560
我要带一名二传手过来。

00:11:30.560 --> 00:11:35.600
我们再次选择节点，选择浮点数。

00:11:35.600 --> 00:11:44.460
现在你看到如果我拖动电缆选择我就会得到这一个选择浮动并且我会得到这一个选择。

00:11:44.460 --> 00:11:50.920
这个有通配符，而另一个默认有布尔值。

00:11:50.920 --> 00:11:52.320
所以我要把它连接到这里。

00:11:52.320 --> 00:11:59.320
我要将点积中大于或等于零的结果连接起来。

00:11:59.320 --> 00:12:08.160
我认为 a 是 -90，b 是 90，因为

00:12:08.160 --> 00:12:13.440
门是正的，所以它是反向打开的。

00:12:13.440 --> 00:12:16.200
我认为就是这样。

00:12:16.200 --> 00:12:19.880
现在我们要连接这个计算方向。

00:12:19.880 --> 00:12:23.920
如果我们将其与这里的开始联系起来，我们就不会这样做。

00:12:23.920 --> 00:12:27.300
每次它都会计算方向。

00:12:27.300 --> 00:12:33.600
所以当我走到门对面去关门时，它就会出问题。

00:12:33.600 --> 00:12:35.600
它会改变方向。

00:12:35.600 --> 00:12:44.360
但是如果我只将它连接到门关闭时，让我们将它连接到从头开始播放

00:12:44.360 --> 00:12:49.920
当然，也要把角度带到这里。

00:12:49.920 --> 00:12:55.320
这样它就只计算门什么时候关闭，什么时候打开

00:12:55.320 --> 00:13:01.520
要关闭它将使用之前计算的相同角度。

00:13:01.520 --> 00:13:07.800
现在我们来测试一下。

00:13:07.800 --> 00:13:10.680
我们可以让玩家和我们一起开始。

00:13:10.680 --> 00:13:18.920
好的，它以这种方式打开，正确关闭，它以这种方式打开，正确关闭。

00:13:18.920 --> 00:13:21.720
所以现在我们有一扇可以打开和关闭的门。

00:13:21.720 --> 00:13:24.600
好的，我经过了那里。

00:13:24.600 --> 00:13:27.320
游戏物理。

00:13:27.320 --> 00:13:33.120
现在我们有一扇门，它可以根据玩家所看的地方打开和关闭。

00:13:33.120 --> 00:13:36.960
好的，我想这个就这样了。

00:13:36.960 --> 00:13:39.040
我们将继续前往下一扇双开门。

00:13:39.040 --> 00:13:42.760
下一课的内容和之前相同，但是数量会加倍。

00:13:42.760 --> 00:13:43.560
暂时再见。

00:13:43.560 --> 00:13:53.560
[空白音频]

00:13:53.560 --> 00:13:55.560
[音乐]

