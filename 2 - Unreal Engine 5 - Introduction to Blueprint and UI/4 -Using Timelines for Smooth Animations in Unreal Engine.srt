WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:18.120
您好，欢迎回到虚幻引擎 5、蓝图掌握、门系统和互动

00:00:18.120 --> 00:00:19.120
门户。

00:00:19.120 --> 00:00:23.920
之前，我们以“打开我们的门”这个代码结束。

00:00:23.920 --> 00:00:33.040
我们在 BigInPlay 上使用门引用。并且我们使用了 setActorRotation 的预设逻辑。

00:00:33.040 --> 00:00:36.480
我们将演员的旋转设置为 0, 0, 0。

00:00:36.480 --> 00:00:40.760
当我们按下播放键时，我们可以看到门已经打开了。

00:00:40.760 --> 00:00:52.480
如果我想以另一种方式打开它，我可以输入 2 - 180，它就会以另一种方式打开。

00:00:52.480 --> 00:00:57.240
如果我每次都想改变它，但我也希望这种情况发生，该怎么办？

00:00:57.240 --> 00:01:05.840
例如，我有 4 个门参考，我希望它们都具有相同的旋转。

00:01:05.840 --> 00:01:08.480
这里我需要的是一个变量。

00:01:08.480 --> 00:01:17.160
为此，我可以将加号按钮悬停在此处，也可以直接右键单击此处并提升

00:01:17.160 --> 00:01:22.040
将其传递给一个名为 newRotation 的变量。

00:01:22.040 --> 00:01:34.840
我可以使用此处的变量名称对其进行重命名，并将其更改为门的旋转。

00:01:34.840 --> 00:01:40.920
正如您所看到的，它出现在我的“蓝图”选项卡上的部分变量中。

00:01:40.920 --> 00:01:42.920
让我们展示另一种方式的创作。

00:01:42.920 --> 00:01:43.920
我要删除它。

00:01:43.920 --> 00:01:48.240
我也要删除这个变量。

00:01:48.240 --> 00:01:57.280
我要添加一个变量，并将其命名为 doorRotation。

00:01:57.280 --> 00:02:04.520
如果我将其拖放到这里，它会要求我获取或设置。

00:02:04.520 --> 00:02:09.440
获取意味着我们正在获取该变量的值。

00:02:09.440 --> 00:02:14.080
设置意味着我们要将变量设置为某个新值。

00:02:14.080 --> 00:02:20.760
例如，如果我选择设置，我们可以看到一些输入引脚和输出引脚。

00:02:20.760 --> 00:02:26.080
我们还可以看到它是彩色的，因为这个变量是布尔类型。

00:02:26.080 --> 00:02:30.800
如果我点击，我们可以看到一堆变量类型。

00:02:30.800 --> 00:02:36.360
最常见的是布尔值，基本上是是或否的开关。

00:02:36.360 --> 00:02:40.120
用编码术语来说，它可以是零和一。

00:02:40.120 --> 00:02:46.320
布尔值就是这样，零和一，真或假。

00:02:46.320 --> 00:02:49.960
接下来我们将有整数。

00:02:49.960 --> 00:02:55.640
例如，一、二、三、四、五、六或负一、二、三、四、五、六

00:02:55.640 --> 00:02:56.640
不限数量。

00:02:56.640 --> 00:02:57.640
嗯，不是无限的。

00:02:57.640 --> 00:02:59.000
它们确实有一个极限。

00:02:59.000 --> 00:03:04.800
我认为极限是千万亿和浮点数，也就是数字

00:03:04.800 --> 00:03:06.960
带有小数点。

00:03:06.960 --> 00:03:08.640
基本上这些是真实的数字。

00:03:08.640 --> 00:03:12.120
然后我们有名称、字符串和文本。

00:03:12.120 --> 00:03:16.480
字符串都是字符，名称和文本都有特定的规则。

00:03:16.480 --> 00:03:18.040
现在是向量。

00:03:18.040 --> 00:03:21.720
这里的向量是三个点浮点数。

00:03:21.720 --> 00:03:26.520
基本上，如果我带来一个向量，如果我在这里创建一个向量，让我们改变变量类型。

00:03:26.520 --> 00:03:30.000
我们可以看到它有 X，Y，Z，A。它是三点。

00:03:30.000 --> 00:03:32.000
我可以在这里把它分开。

00:03:32.000 --> 00:03:35.640
右键单击此处引脚上的节点并分割。

00:03:35.640 --> 00:03:38.240
你基本上可以看到三个浮标。

00:03:38.240 --> 00:03:40.080
这就是向量。

00:03:40.080 --> 00:03:41.080
它可以变成一种颜色。

00:03:41.080 --> 00:03:42.400
它可以成为一场运动。

00:03:42.400 --> 00:03:47.120
它可以变成三个点所代表的任何东西。

00:03:47.120 --> 00:03:49.440
它可以成为一个位置。

00:03:49.440 --> 00:03:54.240
这里我们有一个特定的向量，我们称之为旋转子。

00:03:54.240 --> 00:04:02.640
如果我在这里选择旋转器，即低矢量，并更改变量类型，

00:04:02.640 --> 00:04:04.640
我不想设置它。

00:04:04.640 --> 00:04:08.160
我想得到它。

00:04:08.160 --> 00:04:13.480
现在，一个快捷方式是，如果我按住控制键并拖放到这里，我就会得到

00:04:13.480 --> 00:04:14.480
一个吸气剂。

00:04:14.480 --> 00:04:19.440
如果我按住 alt 键并将其拖放到这里，那么我就会得到一个 setter。

00:04:19.440 --> 00:04:22.640
现在，如果我将其连接到这里，我就会进行编译。

00:04:22.640 --> 00:04:26.000
我需要始终编译并保存。

00:04:26.000 --> 00:04:33.760
我要转到变量并将其更改为负 60。

00:04:33.760 --> 00:04:39.040
我将再次编译并按下播放。

00:04:39.040 --> 00:04:41.600
我们可以看到门半开着。

00:04:41.600 --> 00:04:46.180
当然，如果我靠近它，什么也不会发生。

00:04:46.180 --> 00:04:51.560
现在我们确实有一个变量来改变门的旋转。

00:04:51.560 --> 00:04:56.920
例如，如果我们有很多门，我们可以用这个变量来改变

00:04:56.920 --> 00:04:57.920
旋轉。

00:04:57.920 --> 00:05:07.520
如果我们想看到这种情况发生，我们可以在这里设置一个延迟，这是一个节点

00:05:07.520 --> 00:05:12.080
这会在我们的代码中造成时间停滞。

00:05:12.080 --> 00:05:19.160
就像它等待我们设定的持续时间来完成并继续

00:05:19.160 --> 00:05:20.160
代码。

00:05:20.160 --> 00:05:28.000
因此，我们假设我们将等待两秒钟才能发生这种情况。

00:05:28.000 --> 00:05:29.560
让我们回到我们的地图。

00:05:29.560 --> 00:05:30.560
让我们玩。

00:05:30.560 --> 00:05:32.040
我们来看看门。

00:05:32.040 --> 00:05:35.840
两秒钟后，门移动了，打开了。

00:05:35.840 --> 00:05:41.440
所以这是一个与时间有关的延迟节点。

00:05:41.440 --> 00:05:49.720
因此，由于我们的代码以块形式运行，正如我们所看到的逻辑，一个合乎逻辑的想法是

00:05:49.720 --> 00:05:55.800
就是在这里加一点延迟，稍微改变一下旋转，加一点延迟，改变

00:05:55.800 --> 00:06:01.200
旋转，但延迟太小以致 AI 无法捕捉。

00:06:01.200 --> 00:06:03.560
嗯，有一个脚本化的行为。

00:06:03.560 --> 00:06:09.720
我们已经对此有了书面的行为，就像在许多编程语言中一样，

00:06:09.720 --> 00:06:10.720
如同蓝图一样。

00:06:10.720 --> 00:06:17.080
好吧，伟大的程序员已经创建了工具，所以这些行为对我们来说很容易。

00:06:17.080 --> 00:06:25.120
我们要怎么做才能达到每隔一段时间就移动一点的效果

00:06:25.120 --> 00:06:27.720
被称为时间线。

00:06:27.720 --> 00:06:33.440
我们将搜索时间线并按添加时间线。

00:06:33.440 --> 00:06:40.320
正如你所见，这是一个比简单的延迟节点更复杂的节点，甚至

00:06:40.320 --> 00:06:43.080
与设定的演员轮换相比。

00:06:43.080 --> 00:06:51.600
它有很多输入，播放，从头播放，停止，倒放，从尾部倒放，设置新时间，

00:06:51.600 --> 00:06:57.960
新的时间，您的设置的数量和更新和完成并添加方向。

00:06:57.960 --> 00:07:03.520
这个方向有一种新的颜色，这种颜色我们在这里还没有见过。

00:07:03.520 --> 00:07:08.080
说实话，它看起来像是可以转换成字节的字节。

00:07:08.080 --> 00:07:10.320
这就是它们颜色相似的原因。

00:07:10.320 --> 00:07:16.200
但正如我们在 E 时间方向枚举上悬停时所看到的那样。

00:07:16.200 --> 00:07:21.560
开头的 E 代表 enum，是 enumeration 的缩写。

00:07:21.560 --> 00:07:29.920
基本上，这是我们创建的重置列表，在运行时无法更改。

00:07:29.920 --> 00:07:32.040
这是我们想要的东西的清单。

00:07:32.040 --> 00:07:37.160
这个一定的，具体的，就叫做方向。

00:07:37.160 --> 00:07:45.720
如果我做一个相等节点相等枚举，我们可以在这里看到它向前的选项

00:07:45.720 --> 00:07:46.720
和向后。

00:07:46.720 --> 00:07:49.780
有很多种使用枚举的方法。

00:07:49.780 --> 00:07:56.480
最常见的是使用开关，你可以看到它是在 E 时间轴方向上的开关，

00:07:56.480 --> 00:08:00.960
与此处的枚举名称相同，因为它们是特定于枚举的。

00:08:00.960 --> 00:08:07.600
它们需要有相同的枚举与之相连，即前向和后向。

00:08:07.600 --> 00:08:13.360
例如，这可以连接到更新，这意味着只要时间线在运行，

00:08:13.360 --> 00:08:19.640
做某事或当时间线完成某事时可以连接到完成

00:08:19.640 --> 00:08:20.640
它正在做。

00:08:20.640 --> 00:08:25.520
说说他们前进完了吗，还是后退完了吗？

00:08:25.520 --> 00:08:28.680
我们很快就会用到它。

00:08:28.680 --> 00:08:33.080
现在，我们要删除它，因为我们不需要它。

00:08:33.080 --> 00:08:40.960
我们需要做的是在更新时间轴时，连接设置演员

00:08:40.960 --> 00:08:41.960
旋轉。

00:08:41.960 --> 00:08:42.960
我们删除吧。

00:08:42.960 --> 00:08:46.680
实际上，我们不要删除这个日期。

00:08:46.680 --> 00:08:50.800
让我们从完成状态开始连接然后开始玩吧。

00:08:50.800 --> 00:09:01.600
当延迟完成后，播放时间线并移动我们的演员，旋转我们的演员。

00:09:01.600 --> 00:09:04.040
现在我们玩什么呢？

00:09:04.040 --> 00:09:05.040
没有什么。

00:09:05.040 --> 00:09:06.560
我们还没有设置任何要播放的内容。

00:09:06.560 --> 00:09:12.240
我们不会处理设定的新时间，因为它比

00:09:12.240 --> 00:09:14.280
我们现在正在做的事情。

00:09:14.280 --> 00:09:17.040
我们需要做的是进入时间线。

00:09:17.040 --> 00:09:19.040
正如你所见，这是一个非常特殊的节点。

00:09:19.040 --> 00:09:23.040
如果我双击它，我们就会在这里打开它。

00:09:23.040 --> 00:09:30.880
这里我们有事件图，这里是时间线特定的视口。

00:09:30.880 --> 00:09:33.520
我们有一条轨道，我们将会看看它是什么。

00:09:33.520 --> 00:09:37.640
它将添加类似站点系统的东西，例如流动轨道。

00:09:37.640 --> 00:09:40.640
这就是我们将要使用的。

00:09:40.640 --> 00:09:45.120
我要做的是按住 Shift 键并单击此处创建一个点

00:09:45.120 --> 00:09:48.080
并按住 Shift 键单击，在此创建一个点。

00:09:48.080 --> 00:09:55.480
现在，这两个点都有时间和价值。

00:09:55.480 --> 00:10:03.040
如果我把时间设为零，值设为零，这将是笛卡尔坐标的中间

00:10:03.040 --> 00:10:04.040
系统。

00:10:04.040 --> 00:10:11.440
如果我转到下一个并按下，比如说打开需要多长时间，

00:10:11.440 --> 00:10:22.880
假设 0.5 和值 1，我们可以看到，这个值在 0.5 的时间内变成了值 1。

00:10:22.880 --> 00:10:29.360
现在，我们有一个斜坡，可以利用它来驱动某些东西。

00:10:29.360 --> 00:10:36.040
其余的按钮，如你所见，是长度按钮，如果我缩小

00:10:36.040 --> 00:10:39.160
五秒钟后，时间线停止了。

00:10:39.160 --> 00:10:44.880
我可以将其设置为 0.5，它就会在这里停止时间线。

00:10:44.880 --> 00:10:52.520
但是这里还有另一个按钮，使用最后一个关键帧，即使我添加一个更大的

00:10:52.520 --> 00:10:59.360
跟踪五秒钟后，它会注意到最后一个关键帧位于 0.5，然后它会停止

00:10:59.360 --> 00:11:00.840
时间线在这里。

00:11:00.840 --> 00:11:06.880
现在，如果再次有更多的轨道，它将从最长的轨道中获取最后一个关键帧。

00:11:06.880 --> 00:11:14.080
当然，还有一些其他选项，例如自动播放、循环播放和其他操作，

00:11:14.080 --> 00:11:16.560
我们现在不需要它。

00:11:16.560 --> 00:11:23.800
我们唯一需要做的就是给这条新赛道命名，点击并按 F2 键，

00:11:23.800 --> 00:11:29.840
我将把它命名为“门旋转 Alpha”。

00:11:29.840 --> 00:11:33.520
我要去保存。

00:11:33.520 --> 00:11:37.280
我要关闭时间线，因为我们不再需要它了。

00:11:37.280 --> 00:11:42.320
如果有五秒钟，请确保您已经使用了最后一个关键帧。

00:11:42.320 --> 00:11:44.320
我要结束这个了。

00:11:44.320 --> 00:11:49.440
现在，我们有了一个新的标志，即“门旋转 Alpha”。

00:11:49.440 --> 00:11:56.680
再次强调，这是从 0 到 0.5 秒、从 0 到 1 的值。

00:11:56.680 --> 00:12:00.160
因此这将运行0.5秒。

00:12:00.160 --> 00:12:02.800
它将会更新此金额。

00:12:02.800 --> 00:12:09.560
这将对应这 0.5 秒内从 0 到 1 的值。

00:12:09.560 --> 00:12:13.280
现在，我该如何将其连接起来？

00:12:13.280 --> 00:12:16.520
没有绿色图钉。

00:12:16.520 --> 00:12:23.480
嗯，我可以使用一个具有规定行为的新节点，称为 LERP 节点，

00:12:23.480 --> 00:12:25.680
这是一个数学节点。

00:12:25.680 --> 00:12:30.640
再次，LERP 基本上是从 A 到 B 的插值。

00:12:30.640 --> 00:12:40.080
我可以把这里的 B 连接起来，也就是我的目的地，还有我原来的旋转，

00:12:40.080 --> 00:12:44.120
我认为是零下90度。

00:12:44.120 --> 00:12:47.640
然后我可以在这里连接这个 alpha。

00:12:47.640 --> 00:12:53.480
如果需要的话，我也可以选择对此路径进行排序，但有时可能会把事情搞乱。

00:12:53.480 --> 00:13:01.080
因此，根据您的轮换情况，您可以选择是否检查这一点。

00:13:01.080 --> 00:13:07.720
我要去我的地图并按下播放键。

00:13:07.720 --> 00:13:09.680
这是零下 60 度。

00:13:09.680 --> 00:13:15.520
我们把它放到负 180 度吧，因为我们想要向内打开。

00:13:15.520 --> 00:13:17.320
但它确实有效。

00:13:17.320 --> 00:13:19.040
我们看到它正在发挥作用。

00:13:19.040 --> 00:13:23.280
是的，门自己打开了，等待两秒钟。

00:13:23.280 --> 00:13:28.040
这个时间线让我们的门动起来。

00:13:28.040 --> 00:13:29.600
我认为这对于这个来说已经足够了。

00:13:29.600 --> 00:13:31.520
我们将在下一期节目中见到您。

00:13:31.520 --> 00:13:32.000
再见。

00:13:34.000 --> 00:13:37.360
[音乐播放]

00:13:37.360 --> 00:13:40.720
[音乐播放]

