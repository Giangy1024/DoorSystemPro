WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.440
[音乐播放]

00:00:03.440 --> 00:00:17.840
欢迎回到虚幻引擎 5、蓝图精通、门

00:00:17.840 --> 00:00:20.840
系统和交互式门户。

00:00:20.840 --> 00:00:28.000
之前，我们完成了 BP 加载文本的设置。

00:00:28.000 --> 00:00:33.800
我们添加了一些代码，如果重叠的其他参与者有

00:00:33.800 --> 00:00:39.280
带有标签 P 的组件，即重叠的组件，

00:00:39.280 --> 00:00:42.560
然后打开可见性。

00:00:42.560 --> 00:00:47.760
为此，我们在角色胶囊组件中添加了一个标签。

00:00:47.760 --> 00:00:52.360
因此在第三人称中，蓝图第三人称 BP

00:00:52.360 --> 00:00:56.160
第三人称角色，在胶囊组件中，

00:00:56.160 --> 00:01:00.720
我们搜索标签并添加标签P。

00:01:00.720 --> 00:01:04.480
我们讨论了可以添加标签的另一个地方，

00:01:04.480 --> 00:01:06.280
也是演员。

00:01:06.280 --> 00:01:10.240
我们没有演示它，但如果我们转到类默认

00:01:10.240 --> 00:01:13.080
并再次搜索标签，我们可以找到

00:01:13.080 --> 00:01:17.200
演员有自己的标签选项卡，

00:01:17.200 --> 00:01:22.280
我们还可以看到其他组件的标签。

00:01:22.280 --> 00:01:25.360
因此我们就结束这个吧。

00:01:25.360 --> 00:01:32.160
然后我们继续设置BP流文本

00:01:32.160 --> 00:01:33.880
到下一个房间。

00:01:33.880 --> 00:01:37.080
我们开始创建新的门，

00:01:37.080 --> 00:01:40.800
这是BP单向门。

00:01:40.800 --> 00:01:44.160
因此在这个蓝图中，我们留下了一点偏移

00:01:44.160 --> 00:01:45.600
我能看到的旋转。

00:01:45.600 --> 00:01:51.800
这个应该是0，不是负0，而是0。

00:01:51.800 --> 00:01:53.280
我们稍微改变了一下位置，

00:01:53.280 --> 00:01:55.600
因为枢轴有一点点偏移。

00:01:55.600 --> 00:01:57.720
我们解释说我们要

00:01:57.720 --> 00:02:02.040
根据笛卡尔系统移动门

00:02:02.040 --> 00:02:06.360
此蓝图的局部相对空间

00:02:06.360 --> 00:02:09.440
而不是世界笛卡尔体系。

00:02:09.440 --> 00:02:12.720
因此世界的位置、旋转和尺度。

00:02:12.720 --> 00:02:14.800
是的，这是一个很大的区别。

00:02:14.800 --> 00:02:18.360
世界位置和相对位置，

00:02:18.360 --> 00:02:21.680
世界自转和相对自转，

00:02:21.680 --> 00:02:24.000
当然，这些规模非常大，

00:02:24.000 --> 00:02:26.960
区分起来很重要。

00:02:26.960 --> 00:02:30.440
因为，例如，如果我们旋转，

00:02:30.440 --> 00:02:34.040
假设，世界位置的门是这样的，

00:02:34.040 --> 00:02:36.600
假设这是正确的旋转，例如，

00:02:36.600 --> 00:02:39.960
我们可以通过这种方式移动门。

00:02:39.960 --> 00:02:42.440
所以它正确地跟随演员旋转，

00:02:42.440 --> 00:02:46.000
它像这样打开，并使用世界旋转。

00:02:46.000 --> 00:02:50.720
那么，这就意味着这扇门只能朝这个方向打开。

00:02:50.720 --> 00:02:55.200
如果我想这样做，它仍然会，

00:02:55.200 --> 00:02:56.240
它不会起作用。

00:02:56.240 --> 00:02:57.560
这样就不行了。

00:02:57.560 --> 00:03:01.240
它会按照我们设定的世界自转进行。

00:03:01.240 --> 00:03:07.680
因此区分这一点很重要。

00:03:07.680 --> 00:03:10.600
因此我们回到这里。

00:03:10.600 --> 00:03:15.480
我们将其设置在中间某个位置。

00:03:15.480 --> 00:03:16.480
没关系。

00:03:16.480 --> 00:03:20.920
现在，我们要做什么来让这扇门动起来呢？

00:03:20.920 --> 00:03:22.880
我们将前往我们的教程地图。

00:03:22.880 --> 00:03:25.240
我们要从这里窃取时间线。

00:03:25.240 --> 00:03:27.440
我们要复制它。

00:03:27.440 --> 00:03:31.760
实际上，这只是一个时间线。

00:03:31.760 --> 00:03:36.280
我们将转到图表并将其粘贴到这里。

00:03:36.280 --> 00:03:39.760
由于我们复制并粘贴了它，所以它里面有我们的价值观，

00:03:39.760 --> 00:03:43.600
从 0 到 0.5，从 0 到 1。

00:03:43.600 --> 00:03:46.160
这就是我们的 alpha 驱动器。

00:03:46.160 --> 00:03:50.120
现在，要计算与世界相对的位置，

00:03:50.120 --> 00:03:54.280
这就是为什么我没有复制这个，即设置演员轮换，

00:03:54.280 --> 00:03:59.400
我们将目标设定为这个演员，并进行新的轮换，

00:03:59.400 --> 00:04:04.360
我们需要得到我们的门，也就是道具后门 1，

00:04:04.360 --> 00:04:08.560
并设置相对旋转。

00:04:08.560 --> 00:04:10.960
这是一个非常相似的节点。

00:04:10.960 --> 00:04:13.600
正如你所见，它还进行了扫荡和传送，

00:04:13.600 --> 00:04:21.360
因为这个只有传送，但是不传送就意味着横扫。

00:04:21.360 --> 00:04:25.800
我们要在这里把它连接起来。

00:04:25.800 --> 00:04:30.560
在前面的案例中，我们通过旋转器来进行变换。

00:04:30.560 --> 00:04:35.960
但在这种情况下，我只想右键单击此处并拆分旋转器，

00:04:35.960 --> 00:04:39.440
我要对浮点数进行插值。

00:04:39.440 --> 00:04:48.120
所以我要在这里进行插值，从 0 到，我想，让我们去门口。

00:04:48.120 --> 00:04:51.120
让我们旋转它。

00:04:51.120 --> 00:04:54.480
我认为是零下 90 度。

00:04:54.480 --> 00:04:56.640
它向内打开，负 90 度。

00:04:56.640 --> 00:04:57.640
好的。

00:04:57.640 --> 00:05:01.280
我们也可以看到这里的箭头。

00:05:01.280 --> 00:05:02.840
非常原创。

00:05:02.840 --> 00:05:09.320
因此从 0 到负 90，从 A 到 B。

00:05:09.320 --> 00:05:13.800
现在，我们该怎么称呼它？

00:05:13.800 --> 00:05:17.920
在另一个蓝图中，我们只是在这里使用了碰撞，

00:05:17.920 --> 00:05:21.680
然后我们就打开了门。

00:05:21.680 --> 00:05:25.240
因此，我们可以再次利用碰撞。

00:05:25.240 --> 00:05:26.240
让我们带来...

00:05:26.240 --> 00:05:30.960
它又是一个盒子，所以我们可以带来事件碰撞开始重叠。

00:05:30.960 --> 00:05:40.960
我们可以说，当角色有标签 P 时，

00:05:40.960 --> 00:05:43.000
然后我们再放一个分支。

00:05:43.000 --> 00:05:48.400
我快速带来分支的方法是单击、选择 B，然后单击。

00:05:48.400 --> 00:05:50.800
这带来了一个分支。

00:05:50.800 --> 00:05:55.080
如果这是真的，那就玩吧。

00:05:55.080 --> 00:05:57.280
然后我们又遇到了碰撞门。

00:05:57.280 --> 00:06:03.080
但是当我们与它碰撞时它就会打开。

00:06:03.080 --> 00:06:06.240
但我们不想这么做。

00:06:06.240 --> 00:06:08.320
我们要按 E。

00:06:08.320 --> 00:06:15.880
因此，由于我们不会创建一个用于输入、更改绑定的整个系统，

00:06:15.880 --> 00:06:20.880
为了添加绑定和所有内容，我们将仅使用 E 来打开门。

00:06:20.880 --> 00:06:25.040
我们可以做的是使用玩家控制器。

00:06:25.040 --> 00:06:27.720
所以我要去获取玩家控制器。

00:06:27.720 --> 00:06:37.800
我将在稍后解释并启用来自玩家控制器的输入。

00:06:37.800 --> 00:06:43.320
目标应该是自身并且玩家控制器应该在玩家控制器上。

00:06:43.320 --> 00:06:51.280
我移动它的方式是按下控制键并将其拖放到任何地方

00:06:51.280 --> 00:06:52.280
我想。

00:06:52.280 --> 00:06:55.280
如果我按下 alt 并单击，它会断开连接。

00:06:55.280 --> 00:07:00.840
如果我有与控制相关的东西，我可以将它连接到其他地方。

00:07:00.840 --> 00:07:05.720
那么，什么是玩家控制器以及什么是启用输入？

00:07:05.720 --> 00:07:12.280
虚幻引擎中的玩家控制器是游戏的一部分，用于处理玩家输入

00:07:12.280 --> 00:07:18.880
例如键盘控制器操作并将其转换为玩家角色的命令

00:07:18.880 --> 00:07:21.520
或游戏中的任何其他物体。

00:07:21.520 --> 00:07:26.560
它基本上充当了玩家和游戏世界之间的纽带。

00:07:26.560 --> 00:07:34.800
通常情况下，控制器只能获得直接输入，但我们可以启用其他参与者的输入

00:07:34.800 --> 00:07:38.200
让他们对特定的动作做出反应。

00:07:38.200 --> 00:07:44.800
例如，这里我们将等待 E 动作来打开门。

00:07:44.800 --> 00:07:50.400
为了实现这一点，我们将在这里使用碰撞。

00:07:50.400 --> 00:07:55.600
我要通过按下 alt 并单击这些东西来断开连接。

00:07:55.600 --> 00:08:04.280
实际上我确实需要这个，所以我要剪切并粘贴，然后在这里连接它。

00:08:04.280 --> 00:08:13.800
因此，如果我们的玩家与立方体发生碰撞，那么我们将在这里启用输入。

00:08:13.800 --> 00:08:15.400
哎呀，错误了。

00:08:15.400 --> 00:08:17.560
这应该在这里。

00:08:17.560 --> 00:08:19.600
我们的目标应该是自我。

00:08:19.600 --> 00:08:26.600
我们正在为这个演员、这扇门启用输入，而玩家控制器就是玩家

00:08:26.600 --> 00:08:30.840
控制器。

00:08:30.840 --> 00:08:38.280
但是当我们离开这个框时，我们不想启用输入，基本上是禁用它。

00:08:38.280 --> 00:08:40.200
因此我要选择这个框。

00:08:40.200 --> 00:08:43.440
我将单击组件并重叠。

00:08:43.440 --> 00:08:45.800
我要点击。

00:08:45.800 --> 00:08:57.680
我要复制粘贴这个，连接到这里，然后复制并粘贴控制器

00:08:57.680 --> 00:09:01.080
并调用禁用输入。

00:09:01.080 --> 00:09:08.400
我将把目标设置为自身并连接玩家控制器。

00:09:08.400 --> 00:09:13.720
那么现在我们如何在按下 E 键时激活 E 键？

00:09:13.720 --> 00:09:14.720
嗯，这很容易。

00:09:14.720 --> 00:09:24.360
如果我右键点击并输入键盘，我们可以看到基本上所有的键盘按钮，

00:09:24.360 --> 00:09:33.600
如果我调用 E，让我们找到 E，它就在这里，我调用它，它会自行创建一个事件。

00:09:33.600 --> 00:09:38.200
既然我们已经启用了输入，它就会做一些事情。

00:09:38.200 --> 00:09:39.960
让我们演示一下这一点。

00:09:39.960 --> 00:09:43.320
我们在这里放一个打印字符串。

00:09:43.320 --> 00:09:44.660
它说你好。

00:09:44.660 --> 00:09:47.520
所以我要点击地图。

00:09:47.520 --> 00:09:51.400
如果我现在按 E，它什么也不发生。

00:09:51.400 --> 00:09:57.280
如果我走到门旁边并输入这次碰撞并按 E，它会说你好。

00:09:57.280 --> 00:10:00.560
如果我离开，它就什么也不做。

00:10:00.560 --> 00:10:05.320
因此，只有启用输入时，此功能才有效。

00:10:05.320 --> 00:10:11.920
现在，如果我们对 E 进行了其他执行，我们就有了覆盖父绑定，它将

00:10:11.920 --> 00:10:19.040
覆盖 E 在其他事情中所做的事情，并且它也将消耗输入。

00:10:19.040 --> 00:10:24.080
还有修饰符，例如如果您想同时使用 shift 和 E。

00:10:24.080 --> 00:10:26.360
无论如何，关于它的内容有很多。

00:10:26.360 --> 00:10:30.520
但这基本上是一个输入节点。

00:10:30.520 --> 00:10:38.000
为了制作门的动画，我们可以直接在这里连接，但这样我们就只需要

00:10:38.000 --> 00:10:40.560
能够打开我们的门。

00:10:40.560 --> 00:10:48.400
所以如果我这样做并按 E，我只能打开它。

00:10:48.400 --> 00:10:51.640
我无法关闭它。

00:10:51.640 --> 00:10:54.040
但我认为这是一个很好的停止点。

00:10:54.040 --> 00:10:55.840
我们将在下次见面。

00:10:55.840 --> 00:10:56.400
再见！

00:10:58.400 --> 00:11:06.400
[音乐]

