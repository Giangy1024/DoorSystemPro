WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:12.960
[音乐播放]

00:00:12.960 --> 00:00:17.040
欢迎回到虚幻引擎 5，蓝图精通，

00:00:17.040 --> 00:00:20.480
门系统和交互式门户。

00:00:20.480 --> 00:00:25.960
之前，我们创建了 BP 加载文本。

00:00:25.960 --> 00:00:28.720
我们实际上添加了一些组件

00:00:28.720 --> 00:00:31.600
并创建了构造脚本

00:00:31.600 --> 00:00:36.040
控制文本、颜色和强度。

00:00:36.040 --> 00:00:40.100
我们将其添加到我们的地图中，并使用了组件本身。

00:00:40.100 --> 00:00:42.920
我们选择了蓝图，然后从细节开始，

00:00:42.920 --> 00:00:44.920
我们选择了我们想要的组件

00:00:44.920 --> 00:00:49.560
并将它们移动到我们想要的空间。

00:00:49.560 --> 00:00:53.440
让我们继续编码部分。

00:00:53.440 --> 00:00:57.040
当玩家重叠的时候我们再问一次

00:00:57.040 --> 00:00:59.920
如果是我们的玩家，那么另一个演员就是。

00:00:59.920 --> 00:01:03.040
这次，我们会做些不同的事情。

00:01:03.040 --> 00:01:04.840
我们将进入内容浏览器。

00:01:04.840 --> 00:01:06.520
我们要转到第三人称，

00:01:06.520 --> 00:01:08.760
然后我们将进入文件夹蓝图

00:01:08.760 --> 00:01:12.320
并打开我们的BP第三人称。

00:01:12.320 --> 00:01:14.160
第三人称有代码

00:01:14.160 --> 00:01:16.040
这使得我们的玩家可以四处移动。

00:01:16.040 --> 00:01:18.760
有构造脚本和视口。

00:01:18.760 --> 00:01:22.920
视口由角色网格、胶囊组成，

00:01:22.920 --> 00:01:28.320
摄像机轰鸣、摄像机移动、角色移动

00:01:28.320 --> 00:01:29.440
成分。

00:01:29.440 --> 00:01:33.960
现在，我们想要的是使用胶囊并了解详细信息

00:01:33.960 --> 00:01:42.960
并搜索标签，并添加标签。

00:01:42.960 --> 00:01:46.320
那么，什么是标签？

00:01:46.320 --> 00:01:50.360
标签是简单的标签或标识符，

00:01:50.360 --> 00:01:54.160
如果你愿意，可以将其分配给蓝图参与者

00:01:54.160 --> 00:01:58.600
或组件，并帮助分类和识别

00:01:58.600 --> 00:02:01.800
游戏世界中的物体，使其更容易

00:02:01.800 --> 00:02:05.720
过滤并查找或触发代码中的特定行为。

00:02:05.720 --> 00:02:08.160
例如，现在我们要做的——

00:02:08.160 --> 00:02:10.160
让我们保存并编译。

00:02:10.160 --> 00:02:11.200
让我们回到我们的——

00:02:11.200 --> 00:02:14.640
我们要问的是，如果不是其他演员，

00:02:14.640 --> 00:02:18.760
但是我们重叠的组件有标签吗？

00:02:18.760 --> 00:02:25.280
确实——有标签。

00:02:25.280 --> 00:02:27.160
组件有标签。

00:02:27.160 --> 00:02:31.920
我们将选择 P，因为这是标签

00:02:31.920 --> 00:02:33.520
我们进入了这里。

00:02:33.520 --> 00:02:34.520
我们要结束这个。

00:02:34.520 --> 00:02:35.840
我们不再需要它了。

00:02:35.840 --> 00:02:40.360
如果与盒子重叠的组件

00:02:40.360 --> 00:02:47.200
有标签 P，那么我们将使用一个分支，它是一个 if 节点。

00:02:47.200 --> 00:02:51.640
基本上，如果这个“如果”是正确的，

00:02:51.640 --> 00:02:55.000
如果这是真的，那么我们现在的情况，

00:02:55.000 --> 00:02:56.480
该组件有标签。

00:02:56.480 --> 00:02:57.640
它不是真实的。

00:02:57.640 --> 00:02:59.720
如果不是，则结果为 false。

00:02:59.720 --> 00:03:04.360
所以它是一个带有条件的 if else 语句。

00:03:04.360 --> 00:03:06.400
当然，它需要执行。

00:03:06.400 --> 00:03:10.840
如果我们有组件标签 P，那么我们就会触发真正的分支。

00:03:10.840 --> 00:03:13.000
如果不是，我们就触发错误分支。

00:03:13.000 --> 00:03:16.440
如果是真的，我们将需要文本渲染器。

00:03:16.440 --> 00:03:20.520
我们需要点光源。

00:03:20.520 --> 00:03:26.080
我们将绘制一个可见性集合。

00:03:26.080 --> 00:03:29.880
现在，这是一个控制可见性的节点

00:03:29.880 --> 00:03:32.440
一个组件。

00:03:32.440 --> 00:03:37.720
我们应该把它变成真实的，并在文本中详细说明

00:03:37.720 --> 00:03:43.960
渲染并搜索可见性并将其变为 false。

00:03:43.960 --> 00:03:46.040
我们对点光源也做同样的操作。

00:03:46.040 --> 00:03:51.920
如你所见，我改变了实体，也就是我点击的组件，

00:03:51.920 --> 00:03:54.440
并将标签保留在这里。

00:03:54.440 --> 00:03:56.800
所以这非常有帮助。

00:03:56.800 --> 00:04:02.360
我要关灯、关闭渲染、编译并保存。

00:04:02.360 --> 00:04:08.120
因此这将使两者的可见性变为真实。

00:04:08.120 --> 00:04:09.160
我们去测试一下吧。

00:04:09.160 --> 00:04:12.760
如果我去玩，我什么也看不到。

00:04:12.760 --> 00:04:16.400
我从这里经过，走近开去。

00:04:16.400 --> 00:04:17.400
完美的。

00:04:17.400 --> 00:04:21.720
在此处保存以关闭，在此处接近以打开。

00:04:21.720 --> 00:04:24.480
让我们将第二层变得可见。

00:04:24.480 --> 00:04:30.200
我点击第二级的眼睛，现在它是可见的。

00:04:30.200 --> 00:04:33.960
实际上，如果我们进入这个房间，我们就复制这个。

00:04:33.960 --> 00:04:37.600
我只需选择它并将其拖到这里

00:04:37.600 --> 00:04:44.600
并选择底部的东西并将其拖到这里。

00:04:44.600 --> 00:04:50.160
或许再远一点就到了。

00:04:50.160 --> 00:04:51.840
我也可以复制文本。

00:04:51.840 --> 00:04:57.960
我要旋转，然后按 alt 键，我要复制它

00:04:57.960 --> 00:05:04.800
并将其拖到这里。

00:05:04.800 --> 00:05:09.280
是的，我认为很好。

00:05:09.280 --> 00:05:16.880
让我们选择新的触发器，转到我们的教程地图，带上参考

00:05:16.880 --> 00:05:18.880
并将其连接到这里。

00:05:18.880 --> 00:05:20.160
就这样吧。

00:05:20.160 --> 00:05:25.640
现在我们将这个触发器也绑定到这个事件。

00:05:25.640 --> 00:05:30.920
所以如果我要玩，我可以去这里，接近开球。

00:05:30.920 --> 00:05:37.560
实际上，接近打开，我将跨过这里并关闭。

00:05:37.560 --> 00:05:40.200
打开，关闭。

00:05:40.200 --> 00:05:41.800
伟大的。

00:05:41.800 --> 00:05:46.920
我们的下一扇门就是我们按 E 键就能打开的那扇门。

00:05:46.920 --> 00:05:50.760
因此让我们把碰撞参与者带到这里。

00:05:50.760 --> 00:05:54.600
实际上，我要带一个新的。

00:05:54.600 --> 00:05:58.800
此处流动文本。

00:05:58.800 --> 00:06:06.280
让我们设置文本。

00:06:06.280 --> 00:06:10.960
按 E 打开。

00:06:10.960 --> 00:06:18.880
我们把那个空间放在这里。

00:06:18.880 --> 00:06:26.000
同样，如果我想改变它的外观，文本，我可以选择文本渲染。

00:06:26.000 --> 00:06:28.920
我可以在这里更改选项。

00:06:28.920 --> 00:06:33.560
我可以改变颜色，但我们还没有公开所有这些变量。

00:06:33.560 --> 00:06:36.520
我们只是揭示了文本的内容。

00:06:36.520 --> 00:06:38.200
我们想要在哪里发生碰撞？

00:06:38.200 --> 00:06:48.640
假设玩家已经走过了房间的一半，比如说这里的某个地方。

00:06:48.640 --> 00:06:53.480
为了再次移动它，我只是从详细信息中选择它。

00:06:53.480 --> 00:07:01.960
我们把灯放在这里的某个地方吧。

00:07:01.960 --> 00:07:07.200
我们把文字带过来。

00:07:07.200 --> 00:07:08.200
文本在哪儿？

00:07:08.200 --> 00:07:09.200
噢，看不见。

00:07:09.200 --> 00:07:13.240
这就是我看不到它的原因。

00:07:13.240 --> 00:07:18.560
因此我将去搜索文本细节中的可见性。

00:07:18.560 --> 00:07:33.240
我要将其变为 true，现在我有了文本。

00:07:33.240 --> 00:07:36.760
我有点不喜欢这个，所以我要改变一些设置。

00:07:36.760 --> 00:07:48.280
我要将它设置为中心，并将 X 设置为中心。

00:07:48.280 --> 00:07:51.200
我认为这看起来更好。

00:07:51.200 --> 00:07:52.840
那个地方不错。

00:07:52.840 --> 00:07:55.800
我们可以在其他时间对其进行点调整。

00:07:55.800 --> 00:08:00.200
现在我们来检查一下。

00:08:00.200 --> 00:08:08.880
我需要将其设置回不可见，即可见。

00:08:08.880 --> 00:08:09.880
让我们测试一下。

00:08:09.880 --> 00:08:19.120
让我们移动到这扇门，那里没有文字，关上门，然后出现了这个。

00:08:19.120 --> 00:08:20.120
伟大的。

00:08:20.120 --> 00:08:24.480
现在，我们唯一需要做的就是打开这扇门。

00:08:24.480 --> 00:08:28.440
那么让我们从创建蓝图开始。

00:08:28.440 --> 00:08:34.720
我要右键点击，进入蓝图类，选择一个演员蓝图，因为

00:08:34.720 --> 00:08:35.920
我们不需要拥有它。

00:08:35.920 --> 00:08:37.000
我们不需要移动它。

00:08:37.000 --> 00:08:41.960
它只是具有一些功能的实体。

00:08:41.960 --> 00:08:56.360
因此，我将把演员蓝图称为 PP 单向门。

00:08:56.360 --> 00:08:58.960
那么让我们打开这个蓝图。

00:08:58.960 --> 00:09:01.520
实际上，让我们为门创建一个文件夹。

00:09:01.520 --> 00:09:06.560
在蓝图里面创建一个名为门的文件夹，然后我要将其拖放到

00:09:06.560 --> 00:09:11.080
它在这里。

00:09:11.080 --> 00:09:13.640
让我们将它带到这个世界。

00:09:13.640 --> 00:09:17.120
之后我们将保存它。

00:09:17.120 --> 00:09:23.640
除了双击这里之外，另一种打开蓝图的方法是从大纲视图中打开，

00:09:23.640 --> 00:09:25.880
只需选择我想要编辑的蓝图。

00:09:25.880 --> 00:09:30.880
如果我把它带到这个世界，我可以点击这里，编辑蓝图，或者我

00:09:30.880 --> 00:09:40.560
只需从选择资产中选择打开蓝图编辑器即可。

00:09:40.560 --> 00:09:42.320
所以我要打开它。

00:09:42.320 --> 00:09:47.320
对于这个蓝图，我们需要三个组成部分。

00:09:47.320 --> 00:09:54.120
让我们添加一个碰撞盒。

00:09:54.120 --> 00:09:58.920
这将检测玩家是否在范围内。

00:09:58.920 --> 00:10:02.040
所以它是否可以打开门。

00:10:02.040 --> 00:10:08.320
我们还需要一支箭。

00:10:08.320 --> 00:10:14.440
所以我们知道门朝向哪里，哪个是前面，哪个是后面。

00:10:14.440 --> 00:10:16.720
我们需要一个静态网格。

00:10:16.720 --> 00:10:21.460
对于静态网格来说，实际上，因为我不想搜索资产，因为

00:10:21.460 --> 00:10:27.080
我们这里有它，我只需选择它即可。

00:10:27.080 --> 00:10:29.080
靠近...

00:10:29.080 --> 00:10:32.560
抱歉，不是这支箭。

00:10:32.560 --> 00:10:35.680
这里的详细信息，我将删除可见性。

00:10:35.680 --> 00:10:41.760
我要选择门。

00:10:41.760 --> 00:10:47.840
并且在静态网格上，我可以看到哪个静态网格是该静态网格的实体。

00:10:47.840 --> 00:10:51.360
我要去这里，这里就是门。

00:10:51.360 --> 00:10:58.360
现在我要回到我的蓝图并添加静态网格，它已经选择了

00:10:58.360 --> 00:11:00.360
给我开门。

00:11:00.360 --> 00:11:01.960
伟大的。

00:11:01.960 --> 00:11:05.720
现在，情况有了些转折。

00:11:05.720 --> 00:11:07.760
这没什么关系。

00:11:07.760 --> 00:11:15.000
我只是要把它带过来。

00:11:15.000 --> 00:11:25.080
我们可以通过选择蓝图从地图本身移动其余部分。

00:11:25.080 --> 00:11:32.960
让我们将其旋转 90 度，因为运动将在相对空间中进行。

00:11:32.960 --> 00:11:35.440
那么这是什么意思呢？

00:11:35.440 --> 00:11:41.400
当我在这里旋转门时，首先，我会旋转整个蓝图。

00:11:41.400 --> 00:11:49.800
所以，即使我以其他方式旋转门，它也只会在本地、在世界空间中。

00:11:49.800 --> 00:11:58.600
这意味着我根据地图的坐标和笛卡尔系统来旋转它，

00:11:58.600 --> 00:12:05.960
是基于地图的 x、y、z 轴以及我们所能看见的一切的位置。

00:12:05.960 --> 00:12:12.160
因此位置和旋转将相对于该系统的坐标。

00:12:12.160 --> 00:12:20.120
但我们要做的是旋转这部分，实际上

00:12:20.120 --> 00:12:21.320
箭头的父级。

00:12:21.320 --> 00:12:24.880
现在确保这些东西没有父级。

00:12:24.880 --> 00:12:29.400
如果发生这种情况，比如这里没有箭头，我们只需将其拖放到

00:12:29.400 --> 00:12:30.460
根。

00:12:30.460 --> 00:12:31.460
我们将其附上。

00:12:31.460 --> 00:12:33.880
我们不会生出新根。

00:12:33.880 --> 00:12:37.320
所以，一切事物都是独立的实体。

00:12:37.320 --> 00:12:42.880
例如，如果我把箭头附在门上，然后移动门，那么我就在移动

00:12:42.880 --> 00:12:44.600
带着箭。

00:12:44.600 --> 00:12:48.640
如果我将其分离，你也可以这样做。

00:12:48.640 --> 00:12:54.660
就像如果某个东西附着了，如果你将它拖放到自身上，它就会分离。

00:12:54.660 --> 00:12:59.560
所以现在，如果我移动门，箭头就会停留在那里，正如你所看到的。

00:12:59.560 --> 00:13:10.720
现在我要以相对位置、相对旋转的方式移动这扇门。

00:13:10.720 --> 00:13:13.680
与设定演员轮换不同。

00:13:13.680 --> 00:13:21.160
正如你所看到的，当我把演员移到这里时，枢轴点就是中心，中心

00:13:21.160 --> 00:13:23.280
演员。

00:13:23.280 --> 00:13:30.200
而我想根据门自身的枢轴点来移动门的相对旋转

00:13:30.200 --> 00:13:32.920
蓝图。

00:13:32.920 --> 00:13:33.920
但我想我离题了。

00:13:33.920 --> 00:13:39.440
我认为我们应该看看它的实际作用，我们将把这个问题留到下一课，

00:13:39.440 --> 00:13:40.440
下一课。

00:13:40.440 --> 00:13:42.680
那么我就去见你。

00:13:42.680 --> 00:13:43.280
再见。

00:13:45.280 --> 00:13:53.280
[音乐]

